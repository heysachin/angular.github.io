{"version":3,"sources":["webpack:///ui-scroll-grid.min.js","webpack:///webpack/bootstrap 6fb5c0179465828c8111?4814","webpack:///./src/ui-scroll-grid.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","angular","directive","console","$timeout","GridAdapter","controller","this","getLayout","applyLayout","layout","columnFromPoint","x","y","Object","defineProperty","get","getColumns","ColumnAdapter","column","css","attr","arguments","value","length","header","forEachRow","row","moveBefore","index","exchangeWith","ColumnController","columns","insidePoint","element","offset","left","outerWidth","top","outerHeight","target","detach","before","moveLast","parent","append","applyCss","removeAttr","hasOwnProperty","mapTo","extend","_this","_this2","result","GridController","scrollViewport","transform","visible","forEach","cell","_this3","rowMap","Map","adapter","publicContext","gridAdapter","scope","item","registerColumn","push","registerCell","set","unregisterCell","i","indexOf","splice","delete","callback","_this4","slice","sort","a","b","layouts","Error","map","selected","columnId","next","find","col","undefined","require","restrict","link","$scope","$attr","controllers","gridController","$on"],"mappings":"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","file":"ui-scroll-grid.min.js","sourcesContent":["/*!\r\n * angular-ui-scroll (uncompressed)\r\n * https://github.com/angular-ui/ui-scroll\r\n * Version: 1.6.1 -- 2017-03-03T05:28:34.208Z\r\n * License: MIT\r\n */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tangular.module('ui.scroll.grid', []).directive('uiScrollTh', ['$log', '$timeout', function (console, $timeout) {\n\t\n\t  function GridAdapter(controller) {\n\t\n\t    this.getLayout = function () {\n\t      return controller.getLayout();\n\t    };\n\t\n\t    this.applyLayout = function (layout) {\n\t      return controller.applyLayout(layout);\n\t    };\n\t\n\t    this.columnFromPoint = function (x, y) {\n\t      return controller.columnFromPoint(x, y);\n\t    };\n\t\n\t    Object.defineProperty(this, 'columns', { get: function get() {\n\t        return controller.getColumns();\n\t      } });\n\t  }\n\t\n\t  function ColumnAdapter(controller, column) {\n\t\n\t    this.css = function () /* attr, value */{\n\t      var attr = arguments[0];\n\t      var value = arguments[1];\n\t      if (arguments.length == 1) {\n\t        return column.header.css(attr);\n\t      }\n\t      if (arguments.length == 2) {\n\t        column.header.css(attr, value);\n\t        controller.forEachRow(function (row) {\n\t          return row[column.id].css(attr, value);\n\t        });\n\t        column.css[attr] = value;\n\t      }\n\t    };\n\t\n\t    this.moveBefore = function (index) {\n\t      return controller.moveBefore(column, index);\n\t    };\n\t\n\t    this.exchangeWith = function (index) {\n\t      return controller.exchangeWith(column, index);\n\t    };\n\t\n\t    Object.defineProperty(this, 'columnId', { get: function get() {\n\t        return column.id;\n\t      } });\n\t  }\n\t\n\t  function ColumnController(controller, columns, header) {\n\t\n\t    this.header = header;\n\t    this.css = {};\n\t    this.mapTo = columns.length;\n\t    this.id = columns.length;\n\t\n\t    // controller api methods\n\t\n\t    this.applyLayout = function (layout) {\n\t      this.css = angular.extend({}, layout.css);\n\t      this.mapTo = layout.mapTo;\n\t      applyCss(this.header, this.css);\n\t    };\n\t\n\t    this.moveBefore = function (target) {\n\t      var _this = this;\n\t\n\t      if (target) {\n\t        moveBefore(header, target.header);\n\t        controller.forEachRow(function (row) {\n\t          return moveBefore(row[_this.id], row[target.id]);\n\t        });\n\t      } else {\n\t        moveLast(header);\n\t        controller.forEachRow(function (row) {\n\t          return moveLast(row[_this.id]);\n\t        });\n\t      }\n\t    };\n\t\n\t    this.columnFromPoint = function (x, y) {\n\t      var _this2 = this;\n\t\n\t      if (insidePoint(header, x, y)) {\n\t        return this;\n\t      }\n\t      var result = null;\n\t      controller.forEachRow(function (row) {\n\t        return result = insidePoint(row[_this2.id], x, y) ? _this2 : result;\n\t      });\n\t      return result;\n\t    };\n\t\n\t    this.applyCss = function (target) {\n\t      applyCss(target, this.css);\n\t    };\n\t\n\t    // function definitions\n\t\n\t    function insidePoint(element, x, y) {\n\t      var offset = element.offset();\n\t      if (x < offset.left || offset.left + element.outerWidth(true) < x) return false;\n\t      if (y < offset.top || offset.top + element.outerHeight(true) < y) return false;\n\t      return true;\n\t    }\n\t\n\t    function moveBefore(element, target) {\n\t      element.detach();\n\t      target.before(element);\n\t    }\n\t\n\t    function moveLast(element) {\n\t      var parent = element.parent();\n\t      element.detach();\n\t      parent.append(element);\n\t    }\n\t\n\t    function applyCss(target, css) {\n\t      target.removeAttr('style');\n\t      for (var attr in css) {\n\t        if (css.hasOwnProperty(attr)) {\n\t          target.css(attr, css[attr]);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function GridController(scrollViewport) {\n\t    var _this3 = this;\n\t\n\t    var columns = [];\n\t    var rowMap = new Map();\n\t\n\t    $timeout(function () {\n\t      scrollViewport.adapter.publicContext.gridAdapter = new GridAdapter(_this3);\n\t      scrollViewport.adapter.transform = function (scope, item) {\n\t        return transform(rowMap.get(scope), item);\n\t      };\n\t    });\n\t\n\t    this.registerColumn = function (header) {\n\t      columns.push(new ColumnController(this, columns, header));\n\t    };\n\t\n\t    this.registerCell = function (scope, cell) {\n\t      var row = rowMap.get(scope);\n\t      if (!row) {\n\t        row = [];\n\t        rowMap.set(scope, row);\n\t      }\n\t      if (row.length >= columns.length) {\n\t        return false;\n\t      }\n\t      row.push(cell);\n\t      return true;\n\t    };\n\t\n\t    this.unregisterCell = function (scope, cell) {\n\t      var row = rowMap.get(scope);\n\t      var i = row.indexOf(cell);\n\t      row.splice(i, 1);\n\t      if (!row.length) {\n\t        rowMap.delete(scope);\n\t      }\n\t    };\n\t\n\t    this.forEachRow = function (callback) {\n\t      rowMap.forEach(callback);\n\t    };\n\t\n\t    this.getColumns = function () {\n\t      var _this4 = this;\n\t\n\t      var result = [];\n\t      columns.slice().sort(function (a, b) {\n\t        return a.mapTo - b.mapTo;\n\t      }).forEach(function (column) {\n\t        return result.push(new ColumnAdapter(_this4, column));\n\t      });\n\t      return result;\n\t    };\n\t\n\t    this.getLayout = function () {\n\t      var result = [];\n\t      columns.forEach(function (column, index) {\n\t        return result.push({\n\t          index: index,\n\t          css: angular.extend({}, column.css),\n\t          mapTo: column.mapTo\n\t        });\n\t      });\n\t      return result;\n\t    };\n\t\n\t    this.applyLayout = function (layouts) {\n\t      if (!layouts || layouts.length != columns.length) {\n\t        throw new Error('Failed to apply layout - number of layouts should match number of columns');\n\t      }\n\t      layouts.forEach(function (layout, index) {\n\t        return columns[index].applyLayout(layout);\n\t      });\n\t      transform(columns.map(function (column) {\n\t        return column.header;\n\t      }));\n\t      rowMap.forEach(function (row) {\n\t        return transform(row);\n\t      });\n\t    };\n\t\n\t    this.moveBefore = function (selected, target) {\n\t      var index = target;\n\t\n\t      if (target % 1 !== 0) {\n\t        index = target ? columns[target.columnId].mapTo : columns.length;\n\t      }\n\t      if (index < 0 || index > columns.length) {\n\t        return; // throw an error?\n\t      }\n\t\n\t      var mapTo = selected.mapTo,\n\t          next = null;\n\t      index -= mapTo < index ? 1 : 0;\n\t\n\t      columns.forEach(function (c) {\n\t        c.mapTo -= c.mapTo > mapTo ? 1 : 0;\n\t        c.mapTo += c.mapTo >= index ? 1 : 0;\n\t        next = c.mapTo === index + 1 ? c : next;\n\t      });\n\t\n\t      selected.mapTo = index;\n\t      selected.moveBefore(next);\n\t    };\n\t\n\t    this.exchangeWith = function (selected, index) {\n\t      if (index < 0 || index >= columns.length) {\n\t        return;\n\t      }\n\t      columns.find(function (c) {\n\t        return c.mapTo === index;\n\t      }).mapTo = selected.mapTo;\n\t      selected.mapTo = index;\n\t    };\n\t\n\t    this.columnFromPoint = function (x, y) {\n\t      var column = columns.find(function (col) {\n\t        return col.columnFromPoint(x, y);\n\t      });\n\t      return column ? new ColumnAdapter(this, column) : undefined;\n\t    };\n\t\n\t    // function definitions\n\t\n\t    function transform(row) {\n\t      var parent = row[0].parent();\n\t      var visible = [];\n\t\n\t      row.forEach(function (cell, index) {\n\t        columns[index].applyCss(cell);\n\t        visible[columns[index].mapTo] = row[index];\n\t        row[index].detach();\n\t      });\n\t\n\t      visible.forEach(function (cell) {\n\t        return parent.append(cell);\n\t      });\n\t    }\n\t  }\n\t\n\t  return {\n\t    require: ['^^uiScrollViewport'],\n\t    restrict: 'A',\n\t    link: function link($scope, element, $attr, controllers) {\n\t      controllers[0].gridController = controllers[0].gridController || new GridController(controllers[0]);\n\t      controllers[0].gridController.registerColumn(element);\n\t    }\n\t  };\n\t}]).directive('uiScrollTd', function () {\n\t  return {\n\t    require: ['?^^uiScrollViewport'],\n\t    restrict: 'A',\n\t    link: function link($scope, element, $attr, controllers) {\n\t      if (controllers[0]) {\n\t        (function () {\n\t          var gridController = controllers[0].gridController;\n\t          if (gridController.registerCell($scope, element)) {\n\t            $scope.$on('$destroy', function () {\n\t              return gridController.unregisterCell($scope, element);\n\t            });\n\t          }\n\t        })();\n\t      }\n\t    }\n\t  };\n\t});\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ui-scroll-grid.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fb5c0179465828c8111","angular.module('ui.scroll.grid', [])\n  .directive('uiScrollTh', ['$log', '$timeout', function (console, $timeout) {\n\n    function GridAdapter(controller) {\n\n      this.getLayout = () => controller.getLayout();\n\n      this.applyLayout = (layout) => controller.applyLayout(layout);\n\n      this.columnFromPoint = (x, y) => controller.columnFromPoint(x, y);\n\n      Object.defineProperty(this, 'columns', {get: () => controller.getColumns()});\n    }\n\n    function ColumnAdapter(controller, column) {\n\n      this.css = function (/* attr, value */) {\n        var attr = arguments[0];\n        var value = arguments[1];\n        if (arguments.length == 1) {\n          return column.header.css(attr);\n        }\n        if (arguments.length == 2) {\n          column.header.css(attr, value);\n          controller.forEachRow((row) => row[column.id].css(attr, value));\n          column.css[attr] = value;\n        }\n      };\n\n      this.moveBefore = (index) => controller.moveBefore(column, index);\n\n      this.exchangeWith = (index) => controller.exchangeWith(column, index);\n\n      Object.defineProperty(this, 'columnId', {get: () => column.id});\n    }\n\n    function ColumnController(controller, columns, header) {\n\n      this.header = header;\n      this.css = {};\n      this.mapTo = columns.length;\n      this.id = columns.length;\n\n      // controller api methods\n\n      this.applyLayout = function (layout) {\n        this.css = angular.extend({}, layout.css);\n        this.mapTo = layout.mapTo;\n        applyCss(this.header, this.css);\n      };\n\n      this.moveBefore = function (target) {\n        if (target) {\n          moveBefore(header, target.header);\n          controller.forEachRow((row) => moveBefore(row[this.id], row[target.id]));\n        } else {\n          moveLast(header);\n          controller.forEachRow((row) => moveLast(row[this.id]));\n        }\n      };\n\n      this.columnFromPoint = function (x, y) {\n        if (insidePoint(header, x, y)) {\n          return this;\n        }\n        let result = null;\n        controller.forEachRow((row) =>\n          result = insidePoint(row[this.id], x, y) ? this : result\n        );\n        return result;\n      };\n\n      this.applyCss = function (target) {\n        applyCss(target, this.css);\n      };\n\n      // function definitions\n\n      function insidePoint(element, x, y) {\n        let offset = element.offset();\n        if (x < offset.left || offset.left + element.outerWidth(true) < x)\n          return false;\n        if (y < offset.top || offset.top + element.outerHeight(true) < y)\n          return false;\n        return true;\n      }\n\n      function moveBefore(element, target) {\n        element.detach();\n        target.before(element);\n      }\n\n      function moveLast(element) {\n        let parent = element.parent();\n        element.detach();\n        parent.append(element);\n      }\n\n      function applyCss(target, css) {\n        target.removeAttr('style');\n        for (let attr in css) {\n          if (css.hasOwnProperty(attr)) {\n            target.css(attr, css[attr]);\n          }\n        }\n      }\n\n    }\n\n    function GridController(scrollViewport) {\n      let columns = [];\n      let rowMap = new Map();\n\n      $timeout(() => {\n        scrollViewport.adapter.publicContext.gridAdapter = new GridAdapter(this);\n        scrollViewport.adapter.transform = (scope, item) => transform(rowMap.get(scope), item);\n      });\n\n      this.registerColumn = function (header) {\n        columns.push(new ColumnController(this, columns, header));\n      };\n\n      this.registerCell = function (scope, cell) {\n        let row = rowMap.get(scope);\n        if (!row) {\n          row = [];\n          rowMap.set(scope, row);\n        }\n        if (row.length >= columns.length) {\n          return false;\n        }\n        row.push(cell);\n        return true;\n      };\n\n      this.unregisterCell = function (scope, cell) {\n        let row = rowMap.get(scope);\n        let i = row.indexOf(cell);\n        row.splice(i, 1);\n        if (!row.length) {\n          rowMap.delete(scope);\n        }\n      };\n\n      this.forEachRow = function (callback) {\n        rowMap.forEach(callback);\n      };\n\n      this.getColumns = function () {\n        let result = [];\n        columns.slice()\n          .sort((a, b) => a.mapTo - b.mapTo)\n          .forEach((column) => result.push(new ColumnAdapter(this, column)));\n        return result;\n      };\n\n      this.getLayout = function () {\n        let result = [];\n        columns.forEach((column, index) => result.push({\n            index: index,\n            css: angular.extend({}, column.css),\n            mapTo: column.mapTo\n          })\n        );\n        return result;\n      };\n\n      this.applyLayout = function (layouts) {\n        if (!layouts || layouts.length != columns.length) {\n          throw new Error('Failed to apply layout - number of layouts should match number of columns');\n        }\n        layouts.forEach((layout, index) => columns[index].applyLayout(layout));\n        transform(columns.map((column) => column.header));\n        rowMap.forEach((row) => transform(row));\n      };\n\n      this.moveBefore = function (selected, target) {\n        let index = target;\n\n        if (target % 1 !== 0) {\n          index = target ? columns[target.columnId].mapTo : columns.length;\n        }\n        if (index < 0 || index > columns.length) {\n          return; // throw an error?\n        }\n\n        let mapTo = selected.mapTo, next = null;\n        index -= mapTo < index ? 1 : 0;\n\n        columns.forEach(c => {\n          c.mapTo -= c.mapTo > mapTo ? 1 : 0;\n          c.mapTo += c.mapTo >= index ? 1 : 0;\n          next = c.mapTo === index + 1 ? c : next;\n        });\n\n        selected.mapTo = index;\n        selected.moveBefore(next);\n      };\n\n      this.exchangeWith = function (selected, index) {\n        if (index < 0 || index >= columns.length) {\n          return;\n        }\n        columns.find(c => c.mapTo === index).mapTo = selected.mapTo;\n        selected.mapTo = index;\n      };\n\n      this.columnFromPoint = function (x, y) {\n        let column = columns.find(col => col.columnFromPoint(x, y));\n        return column ? new ColumnAdapter(this, column) : undefined;\n      };\n\n      // function definitions\n\n      function transform(row) {\n        let parent = row[0].parent();\n        let visible = [];\n\n        row.forEach((cell, index) => {\n          columns[index].applyCss(cell);\n          visible[columns[index].mapTo] = row[index];\n          row[index].detach();\n        });\n\n        visible.forEach(cell => parent.append(cell));\n      }\n\n    }\n\n    return {\n      require: ['^^uiScrollViewport'],\n      restrict: 'A',\n      link: ($scope, element, $attr, controllers) => {\n        controllers[0].gridController = controllers[0].gridController || new GridController(controllers[0]);\n        controllers[0].gridController.registerColumn(element);\n      }\n    };\n  }])\n\n  .directive('uiScrollTd', function () {\n    return {\n      require: ['?^^uiScrollViewport'],\n      restrict: 'A',\n      link: ($scope, element, $attr, controllers) => {\n        if (controllers[0]) {\n          let gridController = controllers[0].gridController;\n          if (gridController.registerCell($scope, element)) {\n            $scope.$on('$destroy', () => gridController.unregisterCell($scope, element));\n          }\n        }\n      }\n    };\n  });\n\n\n// WEBPACK FOOTER //\n// ./src/ui-scroll-grid.js"],"sourceRoot":""}